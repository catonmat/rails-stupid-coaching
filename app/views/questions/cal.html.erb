<style>
  #currentDay {
    background-color: red;
  }

  .date:hover {
    background-color: rgba(255,255,255,0.1);
  }

  .date:active {
    background-color: black;
  }
</style>

<table id="calendar-container">
  <th id="calendar-header">
    <tr>
      <td><span id="current-month" data-date="2019-08-30">October</span> <span id="current-year">2019</span></td>
      <td id="togglePrevMonth">Left</td>
      <td id="toggleNextMonth">Right</td>
    </tr>
    <tr>
      <td>Sunday</td>
      <td>Monday</td>
      <td>Tuesday</td>
      <td>Wednesday</td>
      <td>Thursday</td>
      <td>Friday</td>
      <td>Saturday</td>
    </tr>
  </th>
  <tbody id="calendar-body">
  </tbody>
</table>

<script>
  // Set global variables
  const calContainer = document.getElementById('calendar-container');
  const calHeader = document.getElementById('calendar-header');
  const calBody = document.getElementById('calendar-body');
  // currentDay is required in multiple functions and reset as many times as you toggle the months.
  let currentDay = undefined;
  const currentMonth = document.getElementById('current-month');
  const currentYear = document.getElementById('current-year');
  const clickPrevMonth = document.getElementById('togglePrevMonth');
  const clickNextMonth = document.getElementById('toggleNextMonth');
  const today = new Date();
  const todayDay = today.getDate();
  const todayMonth = today.getMonth();
  const todayYear = today.getFullYear();
  const daysOfWeek = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
  // date selectors are the days of the week 0-31 and reset as many times as you toggle the months.
  let dateSelectors = undefined;

  // This function is used inside the toggleMonth(s) functions.
  function getCurrentDate() {
    const day = currentDay.innerText;
    const month = currentMonth.innerText;
    const year = currentYear.innerText;
    const date = Date.parse(`${year}-${month}-${day}`);
    return new Date(date);
  }

  function buildCalendar(date) {
    // Find out which day of the week the first day of the month is on.
    const daysInMonth = new Date(date.getFullYear(), date.getMonth()+1, 0).getDate();
    const dayOfFirstMonth = new Date(date.getFullYear(), date.getMonth(), 1);
    const dayOfWeek = daysOfWeek[dayOfFirstMonth.getDay()];

    // Build empty <td> for every day until the first day of the week.
    let calCells = [];
    for (let i = 0; i < daysOfWeek.indexOf(dayOfWeek); i ++) {
      calCells.push('<td class="date"></td>');
    }
    // Build <td> for every day of the month (28-31)
    for (let i = 1; i <= daysInMonth; i ++) {
      if (date.getMonth() === todayMonth && i === todayDay) {
        calCells.push(`<td id="currentDay" class="date">${i}</td>`);
      } else {
        calCells.push(`<td class="date">${i}</td>`);
      }
    };
    // Slice 7 of the <td> at a time to build calendar rows.
    let calRows = [];
    while (calCells.length > 1) {
      let row = calCells.splice(0, 7);
      row = `<tr>${row}</tr>`;
      calRows.push(row);
    }
    // Convert array into string and remove stray commas.
    return calRows.join('').replace(/,/g, '');
  }

  // Let each <td> for each day day be interactive: it provides a date object each time you click on it.
  function setDateInteraction(date) {
    date.addEventListener('click', (event) => {
      let day = event.currentTarget.innerText;
      let month = currentMonth.innerText;
      let year = currentYear.innerText;
      let date = new Date(Date.parse(`${year}-${month}-${day}`));
      // Use this value 'date' in AJAX calls to the rails server.
      console.log(date);
    })
  }

  // Render new day, month and year from newly built calendar.
  function renderCalendar(calData, nextDate) {
    calBody.innerHTML = calData;
    currentMonth.innerHTML = nextDate.toLocaleString('default', { month: 'long' });
    currentYear.innerHTML = nextDate.getFullYear();
    dateSelectors = document.querySelectorAll('.date');
    dateSelectors.forEach( date => setDateInteraction(date));
  }

  function toggleNextMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth() + 2, 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  function togglePreviousMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth(), 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  clickNextMonth.addEventListener('click', () => {
    toggleNextMonth();
  });

  clickPrevMonth.addEventListener('click', () => {
    togglePreviousMonth();
  })

  // Init the calendar; this function executes onces page loads.
  document.addEventListener('DOMContentLoaded', () => {
    const newDate = new Date;
    const calData = buildCalendar(newDate);
    renderCalendar(calData, newDate);
    currentDay = document.getElementById('currentDay');
  })

</script>
