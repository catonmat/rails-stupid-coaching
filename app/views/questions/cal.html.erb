<style>
  #currentDay {
    background-color: red;
  }

  #calendar-wrapper {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #calendar-container {
    width: 31.25rem;
    height: 18.75rem;
    border: 1px solid red;
    display: grid;
  }

  #calendar-header {
    border: 1px solid red;
    width: 100%;
  }

  #calendar-body {
    border: 1px solid red;
  }

  #calendar-weekdays {
    border: 1px solid red;
  }

  #calendar-control {
    border: 1px solid red;
    width: 100%;
    height: 20%;
    display: flex;
  }
</style>

<div id="calendar-wrapper">
  <div id="calendar-container">
    <div id="calendar-header">
      <div id="calendar-condivol">
        <div id="togglePrevMonth">Left</div>
        <div><span id="current-month" data-date="2019-08-30">October</span> <span id="current-year">2019</span></div>
        <div id="toggleNextMonth">Right</div>
      </div>
      <div id="calendar-weekdays">
        <div>Sunday</div>
        <div>Monday</div>
        <div>Tuesday</div>
        <div>Wednesday</div>
        <div>Thursday</div>
        <div>Friday</div>
        <div>Saturday</div>
      </div>
    </div>
    <div id="calendar-body">
    </div>
  </div>
</div>

<script>
  const clickPrevMonth = document.getElementById('togglePrevMonth');
  const clickNextMonth = document.getElementById('toggleNextMonth');
  const calBody = document.getElementById('calendar-body');
  let currentDay = undefined;
  const currentMonth = document.getElementById('current-month');
  const currentYear = document.getElementById('current-year');
  const today = new Date();
  const todayDay = today.getDate();
  const todayMonth = today.getMonth();
  const todayYear = today.getFullYear();
  const daysOfWeek = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];

  function getCurrentDate() {
    const day = currentDay.innerText;
    const month = currentMonth.innerText;
    const year = currentYear.innerText;
    const date = Date.parse(`${year}-${month}-${day}`);
    return new Date(date);
  }

  function buildCalendar(date) {
    const daysInMonth = new Date(date.getFullYear(), date.getMonth()+1, 0).getDate();
    const dayOfFirstMonth = new Date(date.getFullYear(), date.getMonth(), 1);
    const dayOfWeek = daysOfWeek[dayOfFirstMonth.getDay()];

    let calCells = [];
    for (let i = 0; i < daysOfWeek.indexOf(dayOfWeek); i ++) {
      calCells.push('<div class="calendar-row"></div>');
    }
    for (let i = 1; i <= daysInMonth; i ++) {
      if (date.getMonth() === todayMonth && i === todayDay) {
        calCells.push(`<div id="currentDay">${i}</div>`);
      } else {
        calCells.push(`<div class="calendar-row">${i}</div>`);
      }
    };
    let calRows = [];
    while (calCells.length > 1) {
      let row = calCells.splice(0, 7);
      row = `<div >${row}</div>`;
      calRows.push(row);
    }
    return calRows.join('').replace(/,/g, '');
  }

  function renderCalendar(calData, nextDate) {
    calBody.innerHTML = calData;
    currentMonth.innerHTML = nextDate.toLocaleString('default', { month: 'long' });
    currentYear.innerHTML = nextDate.getFullYear();
  }

  function toggleNextMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth() + 2, 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  function togglePreviousMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth(), 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  clickNextMonth.addEventListener('click', () => {
    toggleNextMonth();
  });

  clickPrevMonth.addEventListener('click', () => {
    togglePreviousMonth();
  })

  document.addEventListener('DOMContentLoaded', () => {
    const newDate = new Date;
    const calData = buildCalendar(newDate);
    renderCalendar(calData, newDate);
    currentDay = document.getElementById('currentDay');
  })

</script>
