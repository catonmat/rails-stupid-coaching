<style>
  #currentDay {
    background-color: red;
  }
</style>

<table id="calendar-container">
  <th id="calendar-header">
    <tr>
      <td><span id="current-month" data-date="2019-08-30">October</span> <span id="current-year">2019</span></td>
      <td id="togglePrevMonth">Left</td>
      <td id="toggleNextMonth">Right</td>
    </tr>
    <tr>
      <td>Sunday</td>
      <td>Monday</td>
      <td>Tuesday</td>
      <td>Wednesday</td>
      <td>Thursday</td>
      <td>Friday</td>
      <td>Saturday</td>
    </tr>
  </th>
  <tbody id="calendar-body">
  </tbody>
</table>

<script>
  const calContainer = document.getElementById('calendar-container');
  const calHeader = document.getElementById('calendar-header');
  const calBody = document.getElementById('calendar-body');
  const currentMonth = document.getElementById('current-month');
  let currentDay = undefined;
  const currentYear = document.getElementById('current-year');
  const clickPrevMonth = document.getElementById('togglePrevMonth');
  const clickNextMonth = document.getElementById('toggleNextMonth');
  const today = new Date();
  const todayDay = today.getDate();
  const todayMonth = today.getMonth();
  const todayYear = today.getFullYear();

  function getCurrentDate() {
    const day = currentDay.innerText;
    const month = currentMonth.innerText;
    const year = currentYear.innerText;
    const date = Date.parse(`${year}-${month}-${day}`);
    return new Date(date);
  }

  function getDaysInMonth(date) {
    const month = date.getMonth();
    const year = date.getFullYear();
    return new Date(year, month, 0).getDate();
  }

  function buildCalendar(date) {
    const daysOfWeek = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
    const days = getDaysInMonth(date);
    const dayOfWeek = daysOfWeek[date.getDay()];

    let calCells = [];
    for (let i = 0; i < date.getDay(); i ++) {
      calCells.push('<td></td>');
    }
    for (let i = 1; i <= days; i ++) {
      if (date.getMonth() === todayMonth && i === todayDay) {
        calCells.push(`<td id="currentDay">${i}</td>`);
      } else {
        calCells.push(`<td>${i}</td>`);
      }
    };
    let calRows = [];
    while (calCells.length > 1) {
      let row = calCells.splice(0, 7);
      row = `<tr>${row}</tr>`;
      calRows.push(row);
    }
    return calRows.join('').replace(/,/g, '');
  }

  function renderCalendar(calData, nextDate) {
    calBody.innerHTML = calData;
    currentMonth.innerHTML = nextDate.toLocaleString('default', { month: 'long' });
    currentYear.innerHTML = nextDate.getFullYear();
  }

  function toggleNextMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth() + 2, 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  function togglePreviousMonth() {
    const currDate = getCurrentDate();
    const nextDate = new Date(currDate.getFullYear(), currDate.getMonth(), 0);
    const calData = buildCalendar(nextDate);
    renderCalendar(calData, nextDate);
  }

  clickNextMonth.addEventListener('click', () => {
    toggleNextMonth();
  });

  clickPrevMonth.addEventListener('click', () => {
    togglePreviousMonth();
  })

  document.addEventListener('DOMContentLoaded', () => {
    const newDate = new Date;
    const calData = buildCalendar(newDate);
    renderCalendar(calData, newDate);
    currentDay = document.getElementById('currentDay');
  })

</script>
